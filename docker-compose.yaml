# docker-compose.yaml
services:
  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=auth_db
      - JWT_SECRET=your-secret-key
      - SERVER_PORT=8080
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USERNAME=naufalmuzakki895@gmail.com
      - SMTP_PASSWORD=vblv goxg qhom ysrv
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - GOOGLE_CLIENT_ID=441262357381-1grqglajulm13bt6cn1cdrmit9tmdskq.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - APPLE_CLIENT_ID=your-apple-client-id
      - APPLE_CLIENT_SECRET=your-apple-client-secret
      - APPLE_KEY_ID=your-apple-key-id
      - APPLE_TEAM_ID=your-apple-team-id
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  article:
    build:
      context: ./services/article
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=article_db
      - JWT_SECRET=your-secret-key
      - SERVER_PORT=8081
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  feedback:
    build:
      context: ./services/feedback
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=feedback_db
      - JWT_SECRET=your-secret-key
      - SERVER_PORT=8082
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=auth_db,article_db,feedback_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
